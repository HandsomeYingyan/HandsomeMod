From b09704d84017e5a8e570b93c6607dc3bc7e428f2 Mon Sep 17 00:00:00 2001
From: Icenowy Zheng <icenowy@aosc.io>
Date: Sat, 13 Jan 2018 13:22:25 +0800
Subject: [PATCH] drm: sun4i: bypass RGB interface dotclock check when panel is
 used

The RGB interface code of sun4i-drm has a dotclock check, which is used
to prevent not supported resolutions when a bridge is used.

However, it prevents most of the panels in panel-simple driver from
being used, as the dotclock may not be divided precisely to the dotclock
in panel-simple driver.

Bypass the dotclock check when a panel is used.

Signed-off-by: Icenowy Zheng <icenowy@aosc.io>
---
 drivers/gpu/drm/sun4i/sun4i_rgb.c | 14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/sun4i/sun4i_rgb.c b/drivers/gpu/drm/sun4i/sun4i_rgb.c
index 7cd7090ad63a..26c314201aaf 100644
--- a/drivers/gpu/drm/sun4i/sun4i_rgb.c
+++ b/drivers/gpu/drm/sun4i/sun4i_rgb.c
@@ -92,14 +92,16 @@ static int sun4i_rgb_mode_valid(struct drm_connector *connector,
 
 	DRM_DEBUG_DRIVER("Vertical parameters OK\n");
 
-	rounded_rate = clk_round_rate(tcon->dclk, rate);
-	if (rounded_rate < rate)
-		return MODE_CLOCK_LOW;
+	if (connector->connector_type != DRM_MODE_CONNECTOR_Unknown) {
+		rounded_rate = clk_round_rate(tcon->dclk, rate);
+		if (rounded_rate < rate)
+			return MODE_CLOCK_LOW;
 
-	if (rounded_rate > rate)
-		return MODE_CLOCK_HIGH;
+		if (rounded_rate > rate)
+			return MODE_CLOCK_HIGH;
 
-	DRM_DEBUG_DRIVER("Clock rate OK\n");
+		DRM_DEBUG_DRIVER("Clock rate OK\n");
+	}
 
 	return MODE_OK;
 }
-- 
2.11.0

